apiVersion: v1
kind: ConfigMap
metadata:
  name: opa-default-system-main
  namespace: opa-system
data:
  main: |
    package system

    import future.keywords.contains
    import future.keywords.if
    import future.keywords.in

    # Admission control configuration
    main = {
      "api_version": "admission.k8s.io/v1",
      "kind": "AdmissionReview",
      "response": response,
    }

    default response = {"allowed": false}

    response = {
      "allowed": false,
      "status": {
        "reason": reason,
      },
    } if {
      reason := concat(", ", deny)
      reason != ""
    }

    response = {"allowed": true} if {
      count(deny) == 0
    }

    # Import all policy packages
    deny[msg] {
      container.security.deny[msg]
    }

    deny[msg] {
      resource.limits.deny[msg]
    }

    deny[msg] {
      network.security.deny[msg]
    }

    deny[msg] {
      data.protection.deny[msg]
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opa
  namespace: opa-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opa
  template:
    metadata:
      labels:
        app: opa
    spec:
      containers:
      - name: opa
        image: openpolicyagent/opa:latest-envoy
        ports:
        - containerPort: 8181
        - containerPort: 8282
        args:
        - "run"
        - "--server"
        - "--config-file=/config/config.yaml"
        - "/policies"
        volumeMounts:
        - readOnly: true
          mountPath: /config
          name: opa-config
        - readOnly: true
          mountPath: /policies
          name: opa-policies
      volumes:
      - name: opa-config
        configMap:
          name: opa-config
      - name: opa-policies
        configMap:
          name: opa-policies