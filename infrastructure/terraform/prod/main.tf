# Terraform configuration for prod environment
# Generated by Rig CLI AI Create

terraform {
  required_version = ">= 1.0"
  
  backend "gcs" {
    bucket = "xometrydevops-training-terraform-state"
    prefix = "env/prod"
  }
}

provider "google" {
  project = var.project_id
  region  = var.region
}

# Environment-specific modules

module "networking" {
  source = "../../modules/networking"
  
  environment = "prod"
  project_id  = var.project_id
  region      = var.region
  
  # Environment-specific network configuration
  vpc_cidr = var.vpc_cidr
  public_subnet_cidr = var.public_subnet_cidr
  private_subnet_cidr = var.private_subnet_cidr
}


module "compute" {
  source = "../../modules/compute"
  
  environment = "prod"
  project_id  = var.project_id
  region      = var.region
  
  # Instance configuration
  instance_type = var.instance_type
  instance_count = var.instance_count
  
  # Auto-scaling for production
  enable_autoscaling = true
  min_instances = 2
  max_instances = 10
  
  # Network dependencies
  vpc_id = module.networking.vpc_id
  subnet_id = module.networking.private_subnet_id
}


module "database" {
  source = "../../modules/database"
  
  environment = "prod"
  project_id  = var.project_id
  region      = var.region
  
  # Database configuration
  database_type = var.database_type
  database_version = var.database_version
  tier = "db-n1-standard-2"
  
  # High availability for production
  availability_type = "REGIONAL"
  backup_enabled = true
  
  # Network dependencies
  vpc_id = module.networking.vpc_id
}


module "storage" {
  source = "../../modules/storage"
  
  environment = "prod"
  project_id  = var.project_id
  
  # Storage configuration
  bucket_name = "${var.project_id}-prod-storage"
  storage_class = "MULTI_REGIONAL"
  
  # Lifecycle policies
  lifecycle_age = 90
  versioning_enabled = true
}


module "monitoring" {
  source = "../../modules/monitoring"
  
  environment = "prod"
  project_id  = var.project_id
  
  # Monitoring configuration
  enable_logging = true
  enable_metrics = true
  enable_alerting = true
  
  # Alert channels for production
  notification_emails = var.alert_emails
}
